{
  "effect.subathon.subathon": "Subathon",

  "category.subathon.keybinds": "Subathon",
  "key.subathon.event_logs": "Event logs",

  "gui.subathon.event_logs": "Subathon logs",
  "gui.subathon.event_logs.sub": "%1$s subscribed with %2$s",
  "gui.subathon.event_logs.resub": "%1$s resubscribed with %3$s, for a total of %2$s months",
  "gui.subathon.event_logs.gift": "%1$s gifted %2$s %3$s sub%4$s",
  "gui.subathon.event_logs.gift_user": "%1$s gifted %4$s a %3$s sub",
  "gui.subathon.event_logs.cheer": "%1$s cheered x%2$s",

  "gui.subathon.clear_logs": "Clear logs",
  "gui.subathon.clear_logs.question": "Are you sure you want to clear the logs?",
  "gui.subathon.clear_logs.message": "\nClearing the logs will only clear the event \nlogs GUI, it will not affect the gameplay",

  "commands.subathon.info": "§fThe current connected channels are: %s",

  "commands.subathon.get.internal_value": "The current internal value is %s",
  "commands.subathon.get.display_value": "The current display value is %s",
  "commands.subathon.get.temp_value": "The current cached value is %s",
  "commands.subathon.get.subs": "The current sub count is %s",
  "commands.subathon.get.bits": "The current bit count is %s",

  "commands.subathon.set.value": "The modifier value has been set to %s",
  "commands.subathon.set.temp_value": "The cached value has been set to %s",
  "commands.subathon.set.subs": "The sub count has been set to %s",
  "commands.subathon.set.bits": "The bit count has been set to %s",

  "commands.subathon.start.message": "§aStarting subathon",
  "commands.subathon.start.warning": "§cThe server may freeze for some seconds",
  "commands.subathon.start.fail": "Failed to start the integration!",

  "commands.subathon.stop.message": "§aStopping subathon",
  "commands.subathon.stop.offline": "§7The integration isn't running",
  "commands.subathon.stop.silent": "§7Attempting a silent stop",

  "commands.subathon.restart.message": "§aRestarting integration",
  "commands.subathon.restart.warning": "§cThe server may freeze for some seconds",

  "commands.subathon.reload.start": "Reloading configurations.",
  "commands.subathon.reload.complete": "Configurations reloaded",
  "commands.subathon.reload.warning": "A restart of the integration will be required for some changes to apply.",

  "commands.subathon.test.trigger": "Triggering event \"%s\"",

  "commands.subathon.error.already_offline": "The integration is already offline!",
  "commands.subathon.error.already_online": "The integration is already online!",
  "commands.subathon.error.offline": "The integration is offline!",
  "commands.subathon.error.online": "The integration is online!",
  "commands.subathon.error.fatal": "A fatal error occurred when executing the command!",
  "commands.subathon.error.invalid_tier": "Invalid sub tier inserted!",
  "commands.subathon.error.module_disabled": "The module \"%s\" is disabled!",


  "title.subathon.config": "Subathon Configurations",
  "category.subathon.general": "General",
  "category.subathon.client": "Client",
  "category.subathon.advanced": "Advanced",
  "category.subathon.modifiers": "Modifiers",
  "category.subathon.subscribers": "Subscribers",
  "category.subathon.subscribers.modifiers": "Sub modifiers",
  "category.subathon.bits": "Bits",
  "category.subathon.timers": "Timers",

  "text.subathon.config.error.not_valid_number_short": "Not a valid number! (Short)",
  "text.subathon.config.error.not_valid_twitch_username": "Not a valid Twitch username!",

  "text.subathon.load.main": "%s (%s/6)",
  "text.subathon.load.users": "Getting user data (%s/%s)",
  "text.subathon.load.stage.pre_init": "Pre init",
  "text.subathon.load.stage.init": "Initializing",
  "text.subathon.load.stage.subscribe": "Subscribing to events",
  "text.subathon.load.stage.joining": "Joining channels",
  "text.subathon.load.stage.broadcast": "Broadcasting!",
  "text.subathon.load.stage.complete": "Integration online!",

  "text.subathon.event.subscription": "%1$s subscribed with %2$s!",
  "text.subathon.event.gift": "%1$s gifted %2$s %3$s sub%4$s!",
  "text.subathon.event.gift_user": "%1$s gifted %2$s a %3$s sub!",
  "text.subathon.event.cheer": "%1$s cheered x%2$s",

  "text.subathon.integration.value": "x%s",
  "text.subathon.integration.start.title": "§c§lSubathon started!",
  "text.subathon.integration.start.subtitle": "§4Let the games begin!",
  "text.subathon.integration.stop.title": "§c§lSubathon stopped!",
  "text.subathon.integration.stop.subtitle": "§4The modifier is still being applied!",
  "text.subathon.integration.offline": "§cIntegration offline",
  "text.subathon.integration.starting": "§eIntegration starting",
  "text.subathon.integration.running": "",
  "text.subathon.integration.reloading": "§dIntegration reloading",

  "text.subathon.error.integration.online": "The integration is already online!",
  "text.subathon.error.integration.reload.offline": "Cannot reload while the integration isn't running!",
  "text.subathon.error.missing_channel_name": "Unable to start, missing channel name!",
  "text.subathon.error.invalid_channel_name": "Ignoring invalid channel name \"%s\"!",
  "text.subathon.error.broadcast": "Failed to send broadcast with id \"%s\"!",
  "text.subathon.error.fatal": "§c§lA fatal error occurred!",
  "text.subathon.error.message_too_long": "§cMessage too long!",

  "option.subathon.mode": "Mode",
  "option.subathon.message_mode": "Message mode",
  "option.subathon.font_scale": "Font scale",
  "option.subathon.effect_amplifier": "Effect increment",
  "option.subathon.effect_multiplier": "Effect multiplier",
  "option.subathon.sub_amplifier": "Subs per increment",
  "option.subathon.run_at_server_start": "Run at server start",
  "option.subathon.channels": "Channel Names",
  "option.subathon.sub.enable": "Enable subs",
  "option.subathon.sub.prime": "Prime sub modifier",
  "option.subathon.sub.tier1": "Tier 1 sub modifier",
  "option.subathon.sub.tier2": "Tier 2 sub modifier",
  "option.subathon.sub.tier3": "Tier 3 sub modifier",
  "option.subathon.sub.one_per_gift": "Gifts increase only once",
  "option.subathon.bits.enable": "Enable bits",
  "option.subathon.bits.min": "Minimum",
  "option.subathon.bits.modifier": "Modifier",
  "option.subathon.bits.cumulative": "Cumulative bits",
  "option.subathon.bits.once": "Once per cheer",
  "option.subathon.bits.cumulative_ignore_min": "Cumulative ignores minimum",
  "option.subathon.reset_timer": "Reset timer",
  "option.subathon.update_timer": "Update timer",
  "option.subathon.show_reset_timer": "Show reset timer",
  "option.subathon.show_update_timer": "Show update timer",

  "option.subathon.mode.description": "Defines the behavior of the mod",
  "option.subathon.message_mode.description": "Where the alert messages will be shown",
  "option.subathon.font_scale.description": "Defines the font scale of the value shown on the HUD",
  "option.subathon.effect_amplifier.description": "How much the effect will increase",
  "option.subathon.effect_multiplier.description": "Used to control the internal effect value\nThe math is: §b(multiplier * amplifier)§r",
  "option.subathon.run_at_server_start.description": "Defines if the integration will start with the server",
  "option.subathon.channels.description": "The channel names, visible on the\nURL after \"https://www.twitch.tv/\"",
  "option.subathon.sub_amplifier.description": "Subs needed to increase the value",
  "option.subathon.sub.enable.description": "Toggles the subscriptions module\nDisabling it makes so subscriptions are ignored completely",
  "option.subathon.sub.description": "Defines how much of the \"subs\" internal variable will be increased.\nIn other words, setting this to 2 will make so it is counted as 2 subs instead of one",
  "option.subathon.sub.one_per_gift.description": "If enabled gifts will only increase the value up to once\nThis doesn't limit only to gifted subs",
  "option.subathon.bits.enable.description": "Toggles the bits module\nDisabling it makes so bits are ignored completely",
  "option.subathon.bits.min.description": "The minimum amount of bits for the cheer to be considered",
  "option.subathon.bits.modifier.description": "How much of the modifier will be incremented",
  "option.subathon.bits.cumulative.description": "The bits donated will be stored internally and when the internal\namount passes the minimum bit count the counter will be increased",
  "option.subathon.bits.once.description": "Only increases the counter once, instead of bits/bit_min",
  "option.subathon.bits.cumulative_ignore_min.description": "Makes so on cumulative bits mode all bits are added to the internal\nbit counter instead of only cheers over the minimum amount",
  "option.subathon.reset_timer.description": "The time between resets, setting this to 0 disables it\nFormat: HH:mm:ss.tt\nH = Hour | m= Minute | s = Second | t = Tick\nTo insert the value in ticks just insert the number and a \u00a7ct\u00a7r on the end\nTo insert in seconds just insert the number",
  "option.subathon.update_timer.description": "The time between updates, setting this to 0 disables it\nFormat: HH:mm:ss.tt\nH = Hour | m= Minute | s = Second | t = Tick\nTo insert the value in ticks just insert the number and a \u00a7ct\u00a7r on the end\nTo insert in seconds just insert the number",
  "option.subathon.show_reset_timer.description": "Shows reset timer",
  "option.subathon.show_update_timer.description": "Shows update timer"
}